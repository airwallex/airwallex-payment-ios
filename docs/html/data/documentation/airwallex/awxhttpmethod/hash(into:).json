{"hierarchy":{"paths":[["doc:\/\/fork.Airwallex\/documentation\/Airwallex","doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]}],"sections":[],"variants":[{"paths":["\/documentation\/airwallex\/awxhttpmethod\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"relatedModules":["Swift"],"name":"Airwallex"}],"role":"symbol","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::c:@EA@AWXHTTPMethod","extendedModule":"Swift","title":"hash(into:)","symbolKind":"method","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://fork.Airwallex/documentation/Airwallex":{"role":"collection","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex","title":"Airwallex","kind":"symbol","type":"topic","url":"\/documentation\/airwallex","abstract":[]},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod/hash(into:)":{"role":"symbol","title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"abstract":[],"type":"topic","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)","url":"\/documentation\/airwallex\/awxhttpmethod\/hash(into:)","kind":"symbol"},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod":{"identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod","navigatorTitle":[{"text":"AWXHTTPMethod","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/airwallex\/awxhttpmethod","abstract":[],"title":"AWXHTTPMethod","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AWXHTTPMethod","kind":"identifier"}],"role":"symbol","type":"topic"}}}