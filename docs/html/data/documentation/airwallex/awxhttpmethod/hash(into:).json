{"variants":[{"paths":["\/documentation\/airwallex\/awxhttpmethod\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"RawRepresentable.hash(into:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"hasher","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["iOS"]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"extendedModule":"Swift","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::c:@EA@AWXHTTPMethod","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"Airwallex"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"hash(into:)","roleHeading":"Instance Method","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/fork.Airwallex\/documentation\/Airwallex","doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)"},"references":{"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod":{"navigatorTitle":[{"kind":"identifier","text":"AWXHTTPMethod"}],"url":"\/documentation\/airwallex\/awxhttpmethod","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AWXHTTPMethod"}],"type":"topic","abstract":[],"identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod","kind":"symbol","title":"AWXHTTPMethod"},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod/hash(into:)":{"abstract":[],"url":"\/documentation\/airwallex\/awxhttpmethod\/hash(into:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)","title":"hash(into:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]}},"doc://fork.Airwallex/documentation/Airwallex":{"url":"\/documentation\/airwallex","title":"Airwallex","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex","role":"collection","kind":"symbol","abstract":[],"type":"topic"}}}