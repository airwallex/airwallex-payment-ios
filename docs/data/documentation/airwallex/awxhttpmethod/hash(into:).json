{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}],"platforms":["iOS"]}]}],"sections":[],"variants":[{"paths":["\/documentation\/airwallex\/awxhttpmethod\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::c:@EA@AWXHTTPMethod","modules":[{"name":"Airwallex","relatedModules":["Swift"]}],"extendedModule":"Swift","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.hash(into:)"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/fork.Airwallex\/documentation\/Airwallex","doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)"},"kind":"symbol","references":{"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod":{"role":"symbol","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod","navigatorTitle":[{"text":"AWXHTTPMethod","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AWXHTTPMethod","kind":"identifier"}],"url":"\/documentation\/airwallex\/awxhttpmethod","type":"topic","abstract":[],"title":"AWXHTTPMethod"},"doc://fork.Airwallex/documentation/Airwallex":{"url":"\/documentation\/airwallex","title":"Airwallex","role":"collection","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex","type":"topic","kind":"symbol","abstract":[]},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod/hash(into:)":{"kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"type":"topic","title":"hash(into:)","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)","url":"\/documentation\/airwallex\/awxhttpmethod\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}]}}}