{"metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF::SYNTHESIZED::c:@EA@AWXHTTPMethod","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Airwallex","relatedModules":["Swift"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"Swift","title":"hash(into:)"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hash(into:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)"},"variants":[{"paths":["\/documentation\/airwallex\/awxhttpmethod\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/fork.Airwallex\/documentation\/Airwallex","doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV","text":"Hasher"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"references":{"doc://fork.Airwallex/documentation/Airwallex":{"role":"collection","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex","url":"\/documentation\/airwallex","type":"topic","kind":"symbol","title":"Airwallex","abstract":[]},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod/hash(into:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/airwallex\/awxhttpmethod\/hash(into:)","type":"topic","identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod\/hash(into:)","role":"symbol"},"doc://fork.Airwallex/documentation/Airwallex/AWXHTTPMethod":{"navigatorTitle":[{"text":"AWXHTTPMethod","kind":"identifier"}],"type":"topic","title":"AWXHTTPMethod","abstract":[],"identifier":"doc:\/\/fork.Airwallex\/documentation\/Airwallex\/AWXHTTPMethod","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AWXHTTPMethod","kind":"identifier"}],"role":"symbol","url":"\/documentation\/airwallex\/awxhttpmethod"}}}