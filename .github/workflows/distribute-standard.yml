# This is a basic workflow to help you get started with Actions

name: Github Actions

on:
  # Enable manual dispatch of the workflow
  workflow_dispatch:
  push:
    branches: [ build/development ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    timeout-minutes: 20

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out source repository
        uses: actions/checkout@v2

      # Run dependency fetch. e.g: cocoapods if needed.

      - name: Setup Xcode version
        # You may pin to the exact commit or the version.
        # uses: maxim-lobanov/setup-xcode@39fba9d7d77a658123787968f124e64e41ee38a1
        uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          # Version of Xcode to use
          xcode-version: "latest-stable"
      
      - name: Bump build number
        run: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_id }}" Examples/Examples/Info.plist
      
#      # Required secrets:
#      # - MATCH_KEYCHAIN_PASSWORD
#      - name: Create build keychain
#        run: |
#          fastlane run create_keychain timeout:1200
#        env:
#          KEYCHAIN_NAME: build_keychain
#          KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
#
#      # Required secrets:
#      # - MATCH_GIT_BASIC_AUTHORIZATION
#      # - MATCH_KEYCHAIN_PASSWORD
#      # - MATCH_PASSWORD
#      # We need both adhoc and appstore profiles. Adhoc for archiving and appstore for exporting.
#      - name: Fastlane match for certificates and provisioning profiles.
#        run: |
#          fastlane run match type:"appstore"
#          fastlane run match type:"adhoc"
#        env:
#          MATCH_READONLY: true
#          MATCH_KEYCHAIN_NAME: build_keychain
#          MATCH_APP_IDENTIFIER: com.airwallex.paymentacceptance
#          MATCH_GIT_URL: https://github.com/airwallex/airwallex-mobile-fastlane-certs.git
#          MATCH_USERNAME: mobile-developer-au@airwallex.com
#          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
#          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
#          MATCH_PASSWORD: ${{ secrets.MATCH_ENCRYPT_PASSWORD }}
          
      - name: Xcode archive
        run: |
          xcodebuild archive -quiet -project Airwallex.xcworkspace -scheme Examples-Demo -archivePath ios.xcarchive

      - name: Xcode export
        run: |
          xcodebuild -exportArchive -archivePath ios.xcarchive -exportPath output -exportOptionsPlist BuildConfigs/ExportOptions/StandardAppStore.plist

      - name: Publish artefact to Github
        uses: actions/upload-artifact@v2
        with:
          name: ios
          path: output/

#      - name: 'Upload app to TestFlight'
#        uses: apple-actions/upload-testflight-build@v1
#        with:
#          app-path: 'output/airwallex.ipa'
#          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
#          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
#          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

#      - name: Tag the commit with the build number
#        run: |
#          echo "TODO: Tag the commit upon success"

